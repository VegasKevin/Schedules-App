{"version":3,"sources":["history.js","apis/volunteers_API.js","actions/types.js","actions/VolunteerActions.js","components/volunteers/VolunteerInfoDisplay.js","components/volunteers/VolunteerListView.js","components/volunteers/SearchVolunteerView.js","components/volunteers/SearchResultsDisplay.js","components/volunteers/Main_Volunteers_View.js","components/volunteers/Modal.js","components/volunteers/CreateVolunteerModalContent.js","components/volunteers/CreateVolunteerView.js","components/volunteers/UpdateVolunteerModalContent.js","components/volunteers/UpdateVolunteerView.js","components/volunteers/DeleteVolunteerView.js","apis/createSchedulesTemplateAPI.js","actions/CreateScheduleTemplateActions.js","components/scheduleTemplates/CurrentTemplateBuildView.js","components/scheduleTemplates/ConfirmTemplateContent.js","components/scheduleTemplates/TemplateSummaryModalView.js","components/scheduleTemplates/CreateTemplateView.js","components/scheduleTemplates/RoleListView.js","components/scheduleTemplates/ConfirmMinistryModal.js","components/scheduleTemplates/AddMinistryView.js","components/settings/SettingsMainView.js","components/schedules/SchedulesMainView.js","apis/manageScheduleTemplates_API.js","components/scheduleTemplates/ScheduleTemplateDropdown.js","components/schedules/CreateNewScheduleView.js","actions/ManageScheduleTemplatesActions.js","components/App.js","reducers/volunteersReducer.js","reducers/SchedulesReducer.js","reducers/CreateSchedulesTemplateReducer.js","reducers/ManageScheduleTemplatesReducer.js","reducers/index.js","index.js"],"names":["createBrowserHistory","axios","create","baseURL","CREATE_VOLUNTEER","DELETE_VOLUNTEER","UPDATE_VOLUNTEER","GET_ALL_VOLUNTEERS","GET_ONE_VOLUNTEER","VOLUNTEER_SELECTED","ERROR_GENERATED","ADD_MINISTRY","ADD_ROLE","CHANGE_NUMBEROFSERVICES","ADD_BACKGROUNDCHECK","DELETE_ROLE","CHANGE_CREATEMINISTRYTITLE","CLEAR_CREATEMINISTRYTITLE","CLEAR_ROLESARRAY","FINALIZE_SCHEDULE_TEMPLATE","CHANGE_SCHEDULETEMPLATENAME","GET_ALL_SCHEDULETEMPLATES","getOneVolunteer","formValues","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","onSuccess","onError","success","wrap","_context","prev","next","error","type","payload","data","volunteers_Axios","post","objectSpread","sent","abrupt","t0","stop","_x","apply","this","arguments","VolunteerInfoDisplay","react_default","createElement","props","backGroundCheck","emailAddress","firstName","lastName","phoneNumber","ministries","preferences","List","Item","key","_id","style","active","backgroundColor","onClick","onToggle","Content","undefined","renderNames","renderEmail","renderBackGround","renderPhoneNumber","renderMinistries","renderPreferences","React","Component","VolunteerListView","state","activeIndex","handleToggle","_this","bind","assertThisInitialized","getAllVolunteers","index","setState","selectVolunteer","volunteers","map","volunteer","volunteers_VolunteerInfoDisplay","className","renderVolunteerList","connect","volunteerSelected","_ref7","_callee3","_context3","get","_x3","selectedVolunteer","SearchVolunteerView","renderSearchField","input","label","meta","concat","touched","assign","autoComplete","onSubmit","handleSubmit","Field","name","component","disabled","pristine","submitting","decoratedWithRedux","reduxForm","form","validate","errors","length","SearchResultDisplay","renderSearchResults","searchVolunteers","celled","Main_Volunteers_View","display","flexDirection","justifyContent","Link","to","volunteers_VolunteerListView","volunteers_SearchVolunteerView","SearchResultsDisplay","Modal","ReactDOM","createPortal","onDismiss","volunteerselected","e","stopPropagation","title","content","document","querySelector","CreateVolunteerModalContent","renderInput","renderRadio","_ref2","options","o","value","checked","_ref3","CreateVolunteerView","createVolunteer","volunteers_Modal","volunteers_CreateVolunteerModalContent","history","push","_ref4","_callee2","_context2","_x2","UpdateVolunteerModalContent","initialValues","load","UpdateVolunteerView","updateVolunteer","console","log","alignItems","width","volunteers_UpdateVolunteerModalContent","_ref10","_callee4","_context4","patch","_x4","DeleteVolunteerView","deleteVolunteer","Button","color","secondary","_ref13","_callee5","_context5","delete","_x5","deleteRole","roleName","CurrentTemplateBuildView","aMinistry","rolesArray","aRole","Description","backGroundCheckRequired","ministryArray","ministryName","renderRoleList","scheduleTemplateName","numberOfServices","Group","divided","renderMinistryList","ConfirmTemplateContent","ministry","JSON","stringify","roleMatches","backGroundCheckArray","filter","roleObject","parentMinistry","aMinistryName","aRoleArray","_this2","pairMinistryRoles","TemplateSummaryModalView","modules_Modal_Modal","open","Header","image","scrolling","scheduleTemplates_ConfirmTemplateContent","onFinalize","onClose","CreateTemplateView","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","buildTemplateObject","newMinistryArray","ministryObject","sendTemplateObject","handleModalClose","onFinalizeScheduleTemplate","modalOpen","handleNumberOfServicesChange","handleTemplateNameChange","handleModalOpen","event","target","onChangeNumberOfServices","onChangeTemplateName","scheduleTemplates_TemplateSummaryModalView","scheduleTemplates_CurrentTemplateBuildView","Form","Input","required","min","max","onChange","renderTemplateSummaryModal","scheduleTemplate","templateObject","schedulesTemplate_Axios","finalizeScheduleTemplate","newNumServices","templateName","changeScheduleTemplateName","RoleListView","size","onRoleDelete","ConfirmMinistryModal","trigger","triggerButton","scheduleTemplates_RoleListView","submitConfirmMinistryButton","AddMinistryView","onSubmitAddRole","alreadyExists","some","role","formError","radioValue","backGroundRadioValue","onAddRole","preventDefault","backGroundRadioOnChange","ministryTitle","ministryTitleOnChange","roleNameOnChange","onCancelMinistry","onConfirmMinistry","creatingMinistryTitle","placeholder","Message","visible","header","Radio","scheduleTemplates_ConfirmMinistryModal","onChangeMinistryName","newRole","newMinistry","newMinistryTitle","changeCreateMinistryTitle","SettingsMainView","SchedulesMainView","justifycontent","ScheduleTemplateDropdown","scheduleTemplatesArray","Dropdown","CreateNewSchedule","buildDropdownArray","allScheduleTemplates","template","text","ScheduleTemplateName","getAllScheduleTemplates","scheduleTemplates_ScheduleTemplateDropdown","manageScheduleTemplates","manageScheduleTemplatesAPI","App","Router","Switch","Route","path","exact","volunteers_Main_Volunteers_View","volunteers_CreateVolunteerView","volunteers_UpdateVolunteerView","volunteers_DeleteVolunteerView","scheduleTemplates_CreateTemplateView","scheduleTemplates_AddMinistryView","settings_SettingsMainView","schedules_SchedulesMainView","CreateNewScheduleView","INITIAL_STATE","scheduleSelected","allSchedulesArray","combineReducers","action","defineProperty","_","omit","id","formReducer","schedules","toConsumableArray","isRequired","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","render","es","components_App"],"mappings":"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","file":"static/js/main.c5bb9eb3.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history';\r\n\r\nexport default createBrowserHistory();","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'http://localhost:5000/api/volunteers'\r\n});","//Volunteers Reducer types\r\nexport const CREATE_VOLUNTEER = \"CREATE_VOLUNTEER\";\r\nexport const DELETE_VOLUNTEER = \"DELETE_VOLUNTEER\";\r\nexport const UPDATE_VOLUNTEER = \"UPDATE_VOLUNTEER\";\r\nexport const GET_ALL_VOLUNTEERS = \"GET_ALL_VOLUNTEERS\";\r\nexport const GET_ONE_VOLUNTEER = \"GET_ONE_VOLUNTEER\";\r\nexport const VOLUNTEER_SELECTED = \"VOLUNTEER_SELECTED\";\r\nexport const ERROR_GENERATED = \"ERROR_GENERATED\";\r\n\r\n//Schedules Reducer types\r\nexport const CREATE_SCHEDULE = \"CREATE_SCHEDULE\";\r\nexport const DELETE_SCHEDULE = \"DELETE_SCHEDULE\";\r\nexport const GET_ALL_SCHEDULES = \"GET_ALL_SCHEDULES\";\r\nexport const GET_ONE_SCHEDULE = \"GET_ONE_SCHEDULE\";\r\nexport const SCHEDULE_SELECTED = \"SCHEDULE_SELECTED\";\r\nexport const UPDATE_SCHEDULE = \"UPDATE_SCHEDULE\";\r\n\r\n//CreateSchedulesTemplate Reducer types\r\nexport const ADD_MINISTRY = \"ADD_MINISTRY\";\r\nexport const ADD_ROLE = \"ADD_ROLE\";\r\nexport const CHANGE_NUMBEROFSERVICES = \"CHANGE_NUMBEROFSERVICES\";\r\nexport const ADD_BACKGROUNDCHECK = \"ADD_BACKGROUNDCHECK\";\r\nexport const DELETE_ROLE = \"DELETE_ROLE\";\r\nexport const CHANGE_CREATEMINISTRYTITLE = \"CHANGE_CREATEMINISTRYTITLE\";\r\nexport const CLEAR_CREATEMINISTRYTITLE =\"CLEAR_CREATEMINISTRYTITLE\";\r\nexport const CLEAR_ROLESARRAY = 'CLEAR_ROLESARRAY';\r\nexport const FINALIZE_SCHEDULE_TEMPLATE = \"FINALIZE_SCHEDULE_TEMPLATE\";\r\nexport const CHANGE_SCHEDULETEMPLATENAME = \"CHANGE_SCHEDULETEMPLATENAME\";\r\n\r\n//ManageScheduleTemplates Reducer Types\r\nexport const GET_ALL_SCHEDULETEMPLATES = \"GET_ALL_SCHEDULETEMPLATES\";","import history from '../history';\r\nimport volunteers_Axios from '../apis/volunteers_API';\r\n\r\nimport {\r\n    CREATE_VOLUNTEER,\r\n    DELETE_VOLUNTEER,\r\n    UPDATE_VOLUNTEER,\r\n    GET_ALL_VOLUNTEERS,\r\n    GET_ONE_VOLUNTEER,\r\n    ERROR_GENERATED,\r\n    VOLUNTEER_SELECTED\r\n} from './types';\r\n\r\nexport function getOneVolunteer (formValues) {\r\n    return async dispatch => {\r\n        function onSuccess(success) {\r\n            dispatch({ type: GET_ONE_VOLUNTEER, payload : success.data});\r\n            return success;\r\n        }\r\n        function onError(error) {\r\n            dispatch({ type: ERROR_GENERATED, error });\r\n            return error;\r\n        }\r\n        try {\r\n            const success = await volunteers_Axios.post(\"/search\", { ...formValues });            \r\n            return onSuccess(success);\r\n        } catch(error){\r\n            return onError(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function createVolunteer (formValues){\r\n    return async dispatch => {\r\n        function onSuccess(success) {\r\n            dispatch({ type: CREATE_VOLUNTEER, payload : success});\r\n            history.push(\"/volunteers\");\r\n            return success;\r\n        }\r\n\r\n        function onError(error){\r\n            dispatch({ type : ERROR_GENERATED, error });\r\n            return error;\r\n        }\r\n        try {\r\n            const success = await volunteers_Axios.post(\"/\", { ...formValues });\r\n            return onSuccess(success);\r\n        } catch(error) {\r\n            return onError(error);\r\n        }\r\n    }\r\n}\r\nexport function getAllVolunteers () {\r\n    return async dispatch => {\r\n        function onSuccess(success) {\r\n            dispatch({ type : GET_ALL_VOLUNTEERS, payload : success.data})\r\n            return success;\r\n        }\r\n\r\n        function onError(error) {\r\n            dispatch({ type: ERROR_GENERATED, error});\r\n            return error;\r\n        }\r\n        try{\r\n            const success = await volunteers_Axios.get('/');\r\n            return onSuccess(success);\r\n        } catch (error) {\r\n            return onError(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function updateVolunteer (formValues) {\r\n    return async dispatch => {\r\n        function onSuccess(success) {\r\n        dispatch({ type: UPDATE_VOLUNTEER, payload: success.data})\r\n            history.push('/volunteers')\r\n            return success;\r\n        }\r\n        function onError(error) {\r\n            dispatch({ type: ERROR_GENERATED, error})\r\n            return error;\r\n        } \r\n        try {\r\n            const success = await volunteers_Axios.patch('/', {...formValues});\r\n            return onSuccess(success);\r\n        }catch(error) {\r\n            return onError(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function deleteVolunteer (_id) {\r\n    return async dispatch => {\r\n        function onSuccess(success) {\r\n            dispatch({ type: DELETE_VOLUNTEER, payload : success.data})\r\n            history.push(\"/volunteers\")\r\n            return success;\r\n        }\r\n        function onError(error) {\r\n            dispatch({ type: ERROR_GENERATED, error})\r\n            return error;\r\n        }\r\n        try { \r\n            const success = await volunteers_Axios.delete('/', {data : {\"_id\" : _id} });\r\n            return onSuccess(success)\r\n        } catch (error) {\r\n            return onError(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function selectVolunteer (selectedVolunteer) {\r\n    return (dispatch) => {\r\n        dispatch( { type: VOLUNTEER_SELECTED, payload : selectedVolunteer})\r\n    }        \r\n}","import React from 'react';\r\n\r\nimport { List } from 'semantic-ui-react';\r\n\r\n//import {styles} from './styles/VolunteerInfoDisplayStyles.css';\r\nclass VolunteerInfoDisplay extends React.Component {\r\n   \r\n    renderBackGround () {\r\n        return (\r\n        <div>Valid Background Check : {(this.props.backGroundCheck) ? 'Yes' : 'No'}</div>\r\n        )\r\n    }\r\n    renderEmail () {\r\n        return(\r\n            <div>Email: {this.props.emailAddress}</div>\r\n        )\r\n    }\r\n    renderNames () {\r\n        return (\r\n            <div><b>{this.props.firstName} {this.props.lastName}</b></div>\r\n        )\r\n    }\r\n    renderPhoneNumber () {\r\n        return (\r\n            <div>Phone #: {this.props.phoneNumber}</div>\r\n        )\r\n    }\r\n    renderMinistries() {\r\n        return (\r\n            <div>Ministries: {this.props.ministries}</div>\r\n        )\r\n    }\r\n    renderPreferences() {\r\n        return (\r\n            <div>Preferences: {this.props.preferences}</div>\r\n        )\r\n    }\r\n    \r\n    render () {\r\n        return (\r\n            <List.Item key={this.props._id}\r\n                style={this.props.active ? {backgroundColor:\"lightblue\"} : {backgroundColor : \"\"}}\r\n                onClick={this.props.onToggle}            \r\n            >\r\n                <List.Content>\r\n                    {(this.props.firstName !==undefined && \r\n                        this.props.lastName !== undefined)          ? this.renderNames() : \"\"}\r\n                    {(this.props.emailAddress !== undefined)        ? this.renderEmail() : \"\"}\r\n                    {(this.props.backGroundCheck !== undefined)     ? this.renderBackGround() : \"\"}\r\n                    {(this.props.phoneNumber !== undefined)         ? this.renderPhoneNumber() : \"\"}\r\n                    {(this.props.ministries !== undefined)          ? this.renderMinistries() : \"\"}\r\n                    {(this.props.preferences !== undefined)         ? this.renderPreferences() : \"\"}                    \r\n                </List.Content>\r\n            </List.Item>  \r\n        )\r\n    }\r\n}\r\nexport default VolunteerInfoDisplay;","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { List } from 'semantic-ui-react';\r\n\r\nimport { getAllVolunteers, selectVolunteer } from '../../actions/VolunteerActions';\r\nimport  VolunteerInfoDisplay  from './VolunteerInfoDisplay';\r\n\r\n\r\nclass VolunteerListView extends React.Component{\r\n\r\n        state = {\r\n            activeIndex : false\r\n        }\r\n        \r\n        componentDidMount () {\r\n            this.props.getAllVolunteers();            \r\n        }\r\n\r\n        handleToggle (index) {\r\n            this.setState({activeIndex : index});\r\n            //console.log(\"!!!test!!: \" + JSON.stringify(this.props.volunteers.volunteers[index]));\r\n            this.props.selectVolunteer(this.props.volunteers.volunteers[index]);\r\n            // console.log(\"volSelected: \"  + JSON.stringify(this.props.volunteers.volunteerSelected));\r\n         }\r\n\r\n        //  componentDidUpdate () {\r\n        //     // this.props.selectVolunteer(this.props.volunteers.volunteers[this.state.activeIndex]);\r\n             \r\n        //  }\r\n\r\n         handleToggle = this.handleToggle.bind(this);        \r\n\r\n         renderVolunteerList  () {            \r\n            var active = this.state.activeIndex;\r\n            return this.props.volunteers.volunteers.map(function(volunteer, index)  {                \r\n\r\n                    if(volunteer._id !== undefined && volunteer._id !== null){\r\n                        return (\r\n                            <VolunteerInfoDisplay\r\n                                active={index === active}\r\n                                onToggle={this.handleToggle.bind(null, index)}\r\n                                key={volunteer._id}\r\n                                firstName={volunteer.firstName}\r\n                                lastName={volunteer.lastName}\r\n                                _id = {volunteer._id}\r\n                                \r\n                            />\r\n                        )                                            \r\n                    } else {\r\n                        return (<div></div>)\r\n                    }                    \r\n                }, this);\r\n        }\r\n            \r\n        \r\n        render () {\r\n            return (\r\n                <div>\r\n                    <h2>Names</h2>\r\n                    <div>\r\n                        <List className='ui celled selection list'>                            \r\n                            {this.renderVolunteerList()}                        \r\n                        </List>                       \r\n                    </div>\r\n                </div>\r\n            );\r\n        };\r\n}\r\n\r\n// const mapDispatchToProps = (dispatch) => {\r\n//     return {\r\n//         selectVolunteer : (volunteerSelected) => {dispatch(selectVolunteer(volunteerSelected))},\r\n//         getAllVolunteers : () => {dispatch(getAllVolunteers())}\r\n//     }\r\n// }\r\n\r\nconst mapStateToProps = ( state/*{ volunteers, volunteerSelected }*/ ) => {\r\n    return {\r\n        volunteers : state.volunteers,\r\n        volunteerSelected : state.volunteers.volunteerSelected\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getAllVolunteers, selectVolunteer })(VolunteerListView);","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { getOneVolunteer } from '../../actions/VolunteerActions';\r\n\r\n\r\nclass SearchVolunteerView extends React.Component {\r\n\r\n    renderSearchField = ( {input, label, meta }) => {\r\n        const className = `field${meta.error && meta.touched ? 'error' : ''}`;\r\n        return(\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <input {...input} autoComplete='off' />\r\n                { meta.error && <span className='error'>{meta.error}</span>}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    onSubmit = formValues => {\r\n        this.props.getOneVolunteer(formValues);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form\r\n                className='ui form error'\r\n                onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n\r\n            >\r\n                <div>\r\n                    <div>\r\n                        <Field\r\n                            name=\"firstName\"\r\n                            label='First Name'\r\n                            component={this.renderSearchField}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <Field\r\n                            name='lastName'\r\n                            label='Last Name'\r\n                            component={this.renderSearchField}\r\n                        />                \r\n                    </div>\r\n                    <button className='ui buttton primary' disabled={this.props.pristine || this.props.submitting}>Search</button>\r\n                </div>\r\n\r\n\r\n            </form>\r\n        );\r\n    }\r\n\r\n}\r\nconst validate = formValues => {\r\n    const errors = {};\r\n    if(formValues.firstName !== undefined){\r\n        if(formValues.firstName.length > 15){        errors.firstName = \"First Name is too many characters\";   }\r\n      }\r\n    if(formValues.lastName !== undefined){\r\n        if(formValues.lastName.length > 20){         errors.lastName = \"Last Name is too  many characters\";  }\r\n    }\r\n    \r\n    return errors;\r\n}\r\n\r\nconst decoratedWithRedux = connect (null, {getOneVolunteer})(SearchVolunteerView);\r\nexport default \r\n    reduxForm ({\r\n        form : \"SearchVolunteerForm\",\r\n        validate\r\n    }) (decoratedWithRedux);\r\n","import React from 'react';\r\n\r\nimport {connect } from 'react-redux';\r\nimport { List } from 'semantic-ui-react';\r\n\r\nimport { getOneVolunteer } from '../../actions/VolunteerActions';\r\n\r\nimport VolunteerInfoDisplay from './VolunteerInfoDisplay';\r\n\r\nclass SearchResultDisplay extends React.Component {\r\n    componentDidUpdate () {\r\n        this.renderSearchResults();\r\n    }    \r\n\r\n    renderSearchResults () {\r\n        if (this.props.searchVolunteers.length === 0){\r\n            return (\r\n                <div>\r\n                    <h5>No Results Found</h5>\r\n                </div>\r\n            )\r\n        }else if(this.props.searchVolunteers !== null) {\r\n            return this.props.searchVolunteers.map(volunteer => {\r\n                return (\r\n                    <VolunteerInfoDisplay\r\n                        key={volunteer._id}\r\n                        firstName={volunteer.firstName}\r\n                        lastName={volunteer.lastName}\r\n                        backGroundCheck={volunteer.backGroundCheck}\r\n                        emailAddress={volunteer.emailAddress}\r\n                        phoneNumber={volunteer.phoneNumber}\r\n                        ministries={volunteer.ministries}\r\n                        preferences={volunteer.preferences}\r\n                    />\r\n                    // <div key={volunteer._id} className='ui celled list'>\r\n                    //     <div>\r\n                    //         Name: {volunteer.firstName} {volunteer.lastName}\r\n                    //     </div>\r\n                    //     <div>\r\n                    //         E-mail Address: {volunteer.emailAddress}\r\n                    //     </div>\r\n                    //     <div>\r\n                    //         Has a Valid Background Check: <b> {volunteer.backGroundCheck.toString()}</b>    \r\n                    //     </div>                        \r\n                    // </div>\r\n                )\r\n            })\r\n        }\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div >\r\n                <div>\r\n                    <h4 >Results:</h4>                \r\n                </div>\r\n                <List celled>\r\n                    {this.renderSearchResults()}            \r\n                </List>\r\n            \r\n        </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {        \r\n        searchVolunteers : state.volunteers.searchVolunteers\r\n    }\r\n}\r\n\r\nexport default connect ( mapStateToProps, { getOneVolunteer })(SearchResultDisplay);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n import { connect } from 'react-redux';\r\n\r\nimport VolunteerListView from './VolunteerListView';\r\nimport SearchVolunteerView from './SearchVolunteerView';\r\n// import { getOneVolunteer } from '../../actions';\r\nimport SearchResultsDisplay from './SearchResultsDisplay';\r\n\r\n//import Create_Volunteer_View from './Create_Volunteer_View';\r\nclass Main_Volunteers_View extends React.Component{\r\n    componentWillUpdate () {\r\n        // console.log(\"::::\");\r\n        // console.log(\"selected \" + this.state.volunteers.volunteerSelected);\r\n       // this.renderSearchResultsDisplay()\r\n\r\n    }\r\n    \r\n     \r\n        render() {\r\n        //console.log(\"selected \" + this.props.volunteerSelected);\r\n        return (\r\n            <div style={{display:\"flex\", flexDirection:\"row\", justifyContent:\"space-between\"}}>\r\n                <div>\r\n                    main_Volunteers_View\r\n                </div>\r\n                <div style={{display:'flex', flexDirection:'column', justifyContent:'space-around'}}>\r\n                    <div>\r\n                        <Link to=\"/volunteers/create\"\r\n                            className='ui button'>\r\n                                Create New Volunteer\r\n                        </Link>\r\n                    </div>\r\n                    <div>\r\n                        {/* <div>{this.props.volunteerSelected.firstName}</div> */}\r\n                        <Link to={(this.props.volunteerSelected !== undefined && this.props.volunteerSelected !== null) ? \"/volunteers/update\" : \"/volunteers\"}\r\n                                className='ui button'\r\n                              //  disabled={(this.props.volunteerSelected === null) ? true : false }\r\n                              >\r\n                            Update Volunteer\r\n                        </Link>\r\n                    </div>\r\n                    <div>\r\n                        <Link to={(this.props.volunteerSelected !== undefined && this.props.volunteerSelected !== null) ? \"/volunteers/delete\" : \"/volunteers\"}\r\n                            className='ui button'\r\n                            >\r\n                                Delete Volunteer\r\n                            </Link>\r\n                    </div>\r\n                </div>                \r\n                <div>\r\n                    <VolunteerListView/>\r\n                </div>\r\n                <div>\r\n                    <SearchVolunteerView\r\n                        //onSubmit={this.onSubmit}\r\n                     />\r\n                    <SearchResultsDisplay/>\r\n                    \r\n                    \r\n\r\n                </div>\r\n                \r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state/*{ searchVolunteers, volunteerSelected}*/) => {\r\n    return {\r\n        searchVolunteers :state.volunteers.searchVolunteers,\r\n        volunteerSelected : state.volunteers.volunteerSelected\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps, null) (Main_Volunteers_View);","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import util from 'util';\r\n\r\nconst Modal = props => {\r\n    //console.log('Modal props:' + props);\r\n   // console.log(\"modal props:\" + util.inspect(props));\r\n    return ReactDOM.createPortal(\r\n        <div \r\n            onClick={props.onDismiss}\r\n            \r\n            className='ui dimmer modals visible active'\r\n        >\r\n            <div\r\n                volunteerselected={props.volunteerSelected}\r\n                onClick={(e) => e.stopPropagation() }\r\n                className=\"ui standard modal visible active\">\r\n                <div className='header'>{props.title}</div>\r\n                <div className='content'>{props.content}</div>\r\n            </div>\r\n        </div>,\r\n        document.querySelector(\"#modal\")\r\n    );\r\n};\r\n\r\nexport default Modal;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nclass CreateVolunteerModalContent extends React.Component{\r\n    \r\n    renderError ( { error, touched }) {\r\n        if (error && touched){\r\n            return (\r\n                <div className='ui error message'>\r\n                    <div className='error'>{error}</div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderInput = ( {input, label, meta}) => {\r\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <input {...input } autoComplete='off' />\r\n                { (meta.touched && meta.error) && <span className='error'>{meta.error}</span> }\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderRadio = ( {input, options, meta, label} ) => {\r\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                 {options.map((o) => \r\n                    <label key={o.value}><input type='radio' {...input} value={o.value} checked={o.value === input.value} /> \r\n                        {o.title} \r\n                    </label>)\r\n                }\r\n                 { (meta.touched && meta.error) && <span className='error'>{meta.error}</span> }\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = formValues => {       \r\n        this.props.onSubmit(formValues);\r\n    }    \r\n    \r\n    render () {\r\n        return (\r\n            <form\r\n                onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n                className='ui form error'\r\n            >\r\n            <div >\r\n                <div>\r\n                    <Field\r\n                        name='firstName'\r\n                        component={this.renderInput}\r\n                        label='First Name' \r\n     \r\n                         />\r\n                </div>\r\n                <div>\r\n                    <Field \r\n                        name='lastName'\r\n                        component={this.renderInput}\r\n                        label=\"Last Name\" />\r\n                </div>\r\n                <div>\r\n                    <Field\r\n                        name='emailAddress'\r\n                        component={this.renderInput}\r\n                        label=\"E-mail Address\"\r\n                        type='email' />\r\n                </div>\r\n                <div>                                       \r\n                    <Field \r\n                        name=\"backGroundCheck\" \r\n                        component={this.renderRadio}\r\n                        label=\"Valid BackGround Check On File\"\r\n                        options = {[\r\n                            { title : \"Yes\", value: \"true\"},\r\n                            { title : \"No\", value : 'false'}\r\n                        ]}\r\n                        />                                                    \r\n                </div>\r\n                <div>\r\n                    <Field  \r\n                        name=\"phoneNumber\"\r\n                        component={this.renderInput}\r\n                        label=\"Phone Number\" />\r\n                </div>\r\n                <div>\r\n                    <Field \r\n                        name='ministries'\r\n                        component={this.renderInput}\r\n                        type='text'\r\n                        label=\"List Ministries they volunteer in\" />\r\n                </div>\r\n                <div>\r\n                    <Field  \r\n                        name=\"preferences\"\r\n                        component={this.renderInput}\r\n                        type='text'\r\n                        label=\"List Preferences for serving times\"/>\r\n                </div>\r\n                <button className='ui button primary' disabled={this.props.pristine || this.props.submitting}>Create Volunteer</button>\r\n                <button className='ui button negative' disabled={this.props.submitting} onClick={this.props.onDismiss}>Cancel</button>\r\n            </div>\r\n            </form>\r\n        )\r\n    }\r\n};\r\n\r\n//validate is a keyword for Redux-Form\r\nconst validate = formValues => {\r\n    const errors = {};\r\n    if(!formValues.firstName){        errors.firstName = \"You must enter a first name\";   }\r\n    if(!formValues.lastName){         errors.lastName = \"You must enter a last name\";  }\r\n    if(!formValues.emailAddress){     errors.emailAddress = \"You must enter an E-mail Address\";  }\r\n    if(!formValues.backGroundCheck){  errors.backGroundCheck = \"You must indicate that status of a current background check\";  }\r\n    return errors;\r\n}\r\n\r\nexport default reduxForm({\r\n    form : 'createVolunteerForm',\r\n    validate\r\n})(CreateVolunteerModalContent);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n//import { Link } from 'react-router-dom';\r\n\r\n//I think I'll need to create each of these action items first\r\n//import { createVolunteer, getVolunteer} from '../../actions/';\r\n\r\nimport Modal from './Modal';\r\nimport history from '../../history';\r\nimport CreateVolunteerModalContent from './CreateVolunteerModalContent';\r\n//import { PromiseProvider } from 'mongoose';\r\n\r\nimport { createVolunteer } from '../../actions/VolunteerActions';\r\n\r\nclass CreateVolunteerView extends React.Component {\r\n\r\n    onSubmit = formValues => {\r\n        this.props.createVolunteer(formValues);\r\n    }\r\n\r\n   render () {\r\n       return (\r\n//    const CreateVolunteerView =  (\r\n        \r\n          <Modal\r\n                title=\"Create New Volunteer\"\r\n                content={<CreateVolunteerModalContent\r\n                            onSubmit={this.onSubmit}\r\n                            onDismiss={() => history.push('/volunteers')}\r\n                        />}\r\n                onDismiss={() => history.push(\"/volunteers\")}\r\n            />\r\n            \r\n            )\r\n            \r\n     //  );\r\n    }\r\n}\r\n\r\n// const mapStateToProps = (state) => {\r\n//     return { state}\r\n    \r\n// }\r\n\r\nexport default connect(null, { createVolunteer })(CreateVolunteerView);","import React from 'react';\r\n\r\nimport { reduxForm, Field } from 'redux-form';\r\nimport { connect} from 'react-redux';\r\n\r\nclass UpdateVolunteerModalContent extends React.Component {\r\n\r\n    renderError ( { error, touched, meta }) {\r\n        if (error && touched && !(meta.pristine)){\r\n            return (\r\n                <div className='ui error message'>\r\n                    <div className='error'>{error}</div>\r\n                </div>\r\n            );\r\n        }\r\n    }\r\n\r\n    renderInput = ( {input, label, meta}) => {\r\n        const className = `field ${(meta.error && meta.touched && !(meta.pristine)) ? 'error' : ''}`;\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                <input  autoComplete='off' {...input}   />\r\n                {/* { (meta.touched && meta.error && (meta.pristine)) && <span className='error'>{meta.error}</span> } */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderRadio = ( {input, options, meta, label} ) => {\r\n        const className = `field ${meta.error && meta.touched ? 'error' : ''}`;\r\n        return (\r\n            <div className={className}>\r\n                <label>{label}</label>\r\n                 {options.map((o) =>                  \r\n                    <label key={o.value}><input type='radio' {...input} value={o.value} checked={input.value === o.value} /> \r\n                        {o.title}\r\n                    </label>)\r\n                    \r\n                }\r\n                 {/* { (meta.touched && meta.error) && <span className='error'>{meta.error}</span> } */}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    onSubmit = (formValues) => {       \r\n        this.props.onSubmit(formValues);\r\n        \r\n    }\r\n    \r\n    render () {\r\n        return (\r\n            <form\r\n                onSubmit={this.props.handleSubmit}\r\n                className='ui form error'\r\n            >\r\n            <div >\r\n                <div>\r\n                    <Field\r\n                        name='firstName'\r\n                        component={this.renderInput}\r\n                        label='First Name'\r\n                        />\r\n                </div>\r\n                <div>\r\n                    <Field \r\n                        name='lastName'\r\n                        component={this.renderInput}\r\n                        label=\"Last Name\"\r\n                        />\r\n                </div>\r\n                <div>\r\n                    <Field\r\n                        name='emailAddress'\r\n                        component={this.renderInput}\r\n                        label=\"E-mail Address\"\r\n                        type='email' \r\n                        />\r\n                </div>\r\n                <div>                                       \r\n                    <Field \r\n                        name=\"backGroundCheck\" \r\n                        component={this.renderRadio}\r\n                        label=\"Valid BackGround Check On File\"\r\n                        options = {[\r\n                            { title : \"Yes\", value: \"true\"},\r\n                            { title : \"No\", value : \"false\"}\r\n                        ]}\r\n                        />\r\n                </div>\r\n                <div>\r\n                    <Field  \r\n                        name=\"phoneNumber\"\r\n                        component={this.renderInput}\r\n                        label=\"Phone Number\"\r\n                        />\r\n                </div>\r\n                <div>\r\n                    <Field \r\n                        name='ministries'\r\n                        component={this.renderInput}\r\n                        type='text'\r\n                        label=\"List Ministries they volunteer in\"\r\n                        />\r\n                </div>\r\n                <div>\r\n                    <Field  \r\n                        name=\"preferences\"\r\n                        component={this.renderInput}\r\n                        type='text'\r\n                        label=\"List Preferences for serving times\"\r\n                        />\r\n                </div>\r\n                <button type='submit' className='ui button primary' disabled={this.props.pristine || this.props.submitting}>Update Volunteer</button> \r\n                <button type='button' className='ui button negative' disabled={this.props.submitting} onClick={this.props.onDismiss}>Cancel</button>\r\n            </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) =>{\r\n   return  {\r\n        volunteerSelected : state.volunteers.volunteerSelected\r\n    }\r\n}\r\n\r\nUpdateVolunteerModalContent = reduxForm({\r\n    form: 'updateVolunteerForm',\r\n})(UpdateVolunteerModalContent)\r\n\r\nUpdateVolunteerModalContent = connect ( \r\n    state => ({\r\n        initialValues : state.volunteers.volunteerSelected\r\n    }),\r\n    {load : ''/*action creator? */}\r\n)(UpdateVolunteerModalContent);\r\n\r\nexport default UpdateVolunteerModalContent;\r\n\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport history from '../../history';\r\nimport Modal from './Modal';\r\n\r\nimport UpdateVolunteerModalContent from './UpdateVolunteerModalContent';\r\nimport VolunteerInfoDisplay from './VolunteerInfoDisplay';\r\nimport { updateVolunteer } from '../../actions/VolunteerActions';\r\n\r\nclass UpdateVolunteerView extends React.Component {\r\n\r\n    onSubmit = (formValues) => {\r\n        //e.preventDefault();\r\n        this.props.updateVolunteer(formValues);\r\n        console.log('did on submit in UpdateVolunteerVIew.js');\r\n    }\r\n\r\n    render () {\r\n        //console.log('update view: ' + JSON.stringify(this.props.volunteerSelected));\r\n        //console.log(\"Phone#: \" + this.props.volunteerSelected.phoneNumber)\r\n        return (\r\n            <Modal \r\n                title=\"UpdateVolunteer\"/*{`Update Volunteer:  ${this.props.volunteerSelected.firstName} ${this.props.volunteerSelected.lastName}`}*/\r\n                content={\r\n                    <div /*className='ui celled table'*/ style={{ display:'flex',flexDirection:'row', justifyContent:'space-around', alignItems:\"stretch\"}}>\r\n                        <div style={{ width:'60%'}}>\r\n                            <UpdateVolunteerModalContent\r\n                                onSubmit={this.onSubmit}\r\n                                onDismiss={() => history.push('/volunteers')}\r\n                            />\r\n                        </div>\r\n                        <div >\r\n                            <VolunteerInfoDisplay\r\n                                key={this.props.volunteerSelected._id}\r\n                                firstName={this.props.volunteerSelected.firstName}\r\n                                lastName={this.props.volunteerSelected.lastName}  \r\n                                backGroundCheck={this.props.volunteerSelected.backGroundCheck}\r\n                                emailAddress={this.props.volunteerSelected.emailAddress}\r\n                                phoneNumber={this.props.volunteerSelected.phoneNumber}\r\n                                ministries={this.props.volunteerSelected.ministries}\r\n                                preferences={this.props.volunteerSelected.preferences}  \r\n                            />\r\n                        </div>\r\n                    </div>\r\n            }\r\n                onDismiss={() => history.push(\"/volunteers\")}\r\n                //volunteerselected= {this.props.volunteerSelected}\r\n                />\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =  (state) => {\r\n    return {\r\n        volunteerSelected : state.volunteers.volunteerSelected\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps, { updateVolunteer })(UpdateVolunteerView);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button } from 'semantic-ui-react';\r\n\r\n\r\nimport Modal from './Modal';\r\nimport history from '../../history';\r\n//import DeleteVolunteerModalContent from './DeleteVolunteerModalContent';\r\n\r\nimport { deleteVolunteer } from '../../actions/VolunteerActions';\r\nimport VolunteerInfoDisplay from './VolunteerInfoDisplay';\r\n\r\nclass DeleteVolunteerView extends React.Component {\r\n\r\n    onDismiss () {\r\n        history.push(\"/volunteers\");\r\n    }\r\n\r\n    onSubmit (_id) {\r\n        this.props.deleteVolunteer(_id);\r\n    }\r\n\r\n    render () {\r\n        return (\r\n                <Modal \r\n                    title={`Are you certain you want to Delete  ${this.props.volunteerSelected.firstName} ${this.props.volunteerSelected.lastName} from the Volunteers List?`}\r\n                    content={\r\n                        <div>\r\n                            <div>\r\n                                <h3>\r\n                                    {`Current Information for ${this.props.volunteerSelected.firstName} ${this.props.volunteerSelected.lastName}`}\r\n                                </h3>\r\n                                <VolunteerInfoDisplay\r\n                                    key={this.props.volunteerSelected._id}\r\n                                    firstName={this.props.volunteerSelected.firstName}\r\n                                    lastName={this.props.volunteerSelected.lastName}  \r\n                                    backGroundCheck={this.props.volunteerSelected.backGroundCheck}\r\n                                    emailAddress={this.props.volunteerSelected.emailAddress}\r\n                                    phoneNumber={this.props.volunteerSelected.phoneNumber}\r\n                                    ministries={this.props.volunteerSelected.ministries}\r\n                                    preferences={this.props.volunteerSelected.preferences}  \r\n                                />\r\n                            </div>\r\n                            <div>\r\n                                <Button color='red' onClick={() => this.onSubmit(this.props.volunteerSelected._id)} type=\"submit\">Delete</Button>\r\n                                <Button secondary onClick={this.onDismiss} type='button'>Cancel</Button>\r\n                            </div>\r\n                        </div>\r\n                    }\r\n                    onDismiss={this.onDismiss}\r\n                />\r\n        )\r\n    }\r\n\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        volunteerSelected : state.volunteers.volunteerSelected\r\n    }\r\n}\r\n\r\nexport default connect (mapStateToProps, { deleteVolunteer })(DeleteVolunteerView);","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL : \"http://localhost:5000/api/schedules/createscheduletemplate\"\r\n})","import {\r\n    ADD_MINISTRY,\r\n    ADD_ROLE,\r\n    CHANGE_NUMBEROFSERVICES,\r\n    ADD_BACKGROUNDCHECK,\r\n    DELETE_ROLE,\r\n    CHANGE_CREATEMINISTRYTITLE,\r\n    CLEAR_CREATEMINISTRYTITLE,\r\n    CLEAR_ROLESARRAY,\r\n    FINALIZE_SCHEDULE_TEMPLATE,\r\n    ERROR_GENERATED,\r\n    CHANGE_SCHEDULETEMPLATENAME,    \r\n} from './types';\r\n\r\nimport history from '../history';\r\nimport schedulesTemplate_Axios from '../apis/createSchedulesTemplateAPI';\r\n\r\n//Adds ministry Object to the ministry array in the Schedule Template store. Clears rolesArray in Schedule Template Store\r\nexport function addMinistry (newMinistry) {  //Do I want newMinistry to be a Ministry Object? a name? or something else?\r\n    return dispatch => {\r\n        dispatch( { type: ADD_MINISTRY, payload: newMinistry })\r\n        dispatch({ type: CLEAR_ROLESARRAY  })\r\n        dispatch({ type: CLEAR_CREATEMINISTRYTITLE })\r\n    }\r\n}\r\n\r\n//This clears the rolesArray for a Ministry in the process of being created.  This is intially called from AddMinistryView.js red 'cancel' button\r\nexport function clearRolesArray (){\r\n    return dispatch => {\r\n        dispatch ({ type: CLEAR_ROLESARRAY });\r\n    }\r\n}\r\n\r\n//Adds a role object to the rolesArray array in Schedule Template Store\r\nexport function addRole (newRole) {\r\n    return (dispatch) => {\r\n        dispatch ({ type: ADD_ROLE, payload : newRole });\r\n    }\r\n}\r\n\r\n//Deletes a specific role from the rolesArray\r\nexport function deleteRole (roleName) {\r\n    return (dispatch) => {\r\n        dispatch ({ type: DELETE_ROLE, payload : roleName });\r\n    }\r\n}\r\n\r\nexport function addBackGroundCheck(newBGCheck) {\r\n    return (dispatch) => {        \r\n        dispatch({  type: ADD_BACKGROUNDCHECK, payload: newBGCheck});\r\n    }\r\n}\r\n\r\n//Chnages the numberOfServices values for the Schedule Template\r\nexport function changeNumberOfServices (newNumServices) {\r\n    return (dispatch) => {\r\n        dispatch ({ type: CHANGE_NUMBEROFSERVICES, payload : newNumServices});\r\n    }\r\n}\r\n\r\n//Changes the title of the ministry being created\r\nexport function changeCreateMinistryTitle (event, newMinistryTitle) {\r\n    event.preventDefault();  //This prevents a form popup to 'fill out a required field' when the 'Add Ministry to Template' Button is clicked in AddMinistryView.js\r\n    return (dispatch) => {\r\n        dispatch ({ type: CHANGE_CREATEMINISTRYTITLE, payload : newMinistryTitle });\r\n    }\r\n}\r\n\r\nexport function finalizeScheduleTemplate (templateObject) {\r\n    return async dispatch => {\r\n        function onSuccess(success){\r\n            dispatch ({ type: FINALIZE_SCHEDULE_TEMPLATE, payload : success });\r\n            history.push(\"/settings/createtemplate\")\r\n            return success;\r\n        }\r\n        function onError(error){\r\n            dispatch({ type: ERROR_GENERATED, error });\r\n            return error;\r\n        }\r\n        try {\r\n            const success = await schedulesTemplate_Axios.post(\"/\", templateObject);\r\n            return onSuccess(success);\r\n        } catch(error){\r\n            return onError(error);\r\n        }\r\n    }\r\n}\r\n\r\nexport function changeScheduleTemplateName (templateName) {\r\n    return (dispatch) => {\r\n        dispatch({ type: CHANGE_SCHEDULETEMPLATENAME, payload : templateName  });\r\n    }\r\n}","import React from 'react';\r\nimport { Item } from 'semantic-ui-react';\r\n\r\nclass CurrentTemplateBuildView extends React.Component{\r\n\r\n    renderRoleList (aMinistry) {\r\n        return (\r\n            aMinistry.rolesArray.map((aRole, index) => {\r\n                return (\r\n                    <Item key={index}>\r\n                        <Item.Content>                        \r\n                            <Item.Description>\r\n                                <div>\r\n                                    Role Name: {aRole.roleName}\r\n                                </div>\r\n                                <div>\r\n                                    BackGroundCheck Required: {(aRole.backGroundCheckRequired === true) ? \"Yes\" : \"No\"}\r\n                                </div>                             \r\n                            </Item.Description>\r\n                        </Item.Content>\r\n                    </Item>\r\n                )\r\n            })\r\n        )\r\n    }\r\n\r\n    ///Renders the ministry name and then calls renderRoleList to render the roles for a specific ministry\r\n    renderMinistryList () {\r\n        return (\r\n                this.props.ministryArray.map((aMinistry, index) => {\r\n                    return (\r\n                        <Item key={index}>\r\n                            <Item.Content>\r\n                                <Item.Description>\r\n                                    Ministry Name: {aMinistry.ministryName}\r\n                                    {this.renderRoleList(aMinistry)}\r\n                                </Item.Description>\r\n                            </Item.Content>\r\n                        </Item>\r\n                )})            \r\n        );\r\n    }\r\n    render () {\r\n        return (\r\n            <div>\r\n                <h3>Current Status of the Schedule Template Being Created</h3>\r\n                <div>\r\n                    <h4>Schedule Template Name: {this.props.scheduleTemplateName}</h4>\r\n                    <h5>Number of Services: {this.props.numberOfServices}</h5>\r\n                </div>\r\n                <Item.Group divided>\r\n                    {this.renderMinistryList()}\r\n                </Item.Group>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\nexport default CurrentTemplateBuildView;","import React from 'react';\r\n\r\nclass ConfirmTemplateContent extends React.Component{\r\n\r\n    pairMinistryRoles () {\r\n        let pairedArray = \r\n        this.props.ministryArray.map(ministry => {\r\n            console.log(\"ministry: \" + JSON.stringify(ministry))\r\n           let roleMatches = this.props.backGroundCheckArray.filter((roleObject => roleObject.parentMinistry === ministry.ministryName));\r\n           let aMinistryName = ministry.ministryName;\r\n          // pairedArray.push(ministry.ministryName : roleMatches)})\r\n           return { aMinistryName : roleMatches};\r\n        })\r\n       \r\n\r\n        //this.renderRoleList(pairedArray);\r\n    }\r\n\r\n    renderRoleList (aMinistry){\r\n        return (\r\n            aMinistry.rolesArray.map((aRoleArray, index)=>{\r\n                     return (\r\n                        <div key={index} style={{display:'flex', flexDirection:\"row\"}}>\r\n                            Role Name: {aRoleArray.roleName}    Requires BackGroundCheck:  {(aRoleArray.backGroundCheckRequired === true) ? \"Yes\" : \"No\"}\r\n                        </div>\r\n            )})\r\n         )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            this.props.ministryArray.map((ministry, index)=> {\r\n                return (                    \r\n                    <div key={index}>\r\n                        <br></br>\r\n                            <h4>Ministry Name: {ministry.ministryName}</h4>\r\n                         {this.renderRoleList(ministry)} \r\n                        {this.pairMinistryRoles()}\r\n\r\n                    </div>\r\n                )\r\n            })\r\n           \r\n        )\r\n    }\r\n}\r\nexport default ConfirmTemplateContent;","import React from 'react';\r\nimport { Modal, Header, Button } from 'semantic-ui-react';\r\n\r\nimport ConfirmTemplateContent from './ConfirmTemplateContent';\r\n\r\nconst TemplateSummaryModalView = (props) => {\r\n    return (\r\n        <Modal open={props.open}>\r\n            <Modal.Header>New Schedule Template Summary</Modal.Header>\r\n               <Modal.Content image scrolling>\r\n                   <div style={{display:'flex', flexDirection:'column'}}>\r\n                   <Modal.Description>\r\n                       <div>\r\n                           <Header>\r\n                               Please Check Schedule Template for Accuracy and Confirm\r\n                           </Header>\r\n                       </div>\r\n                       <div>\r\n                       <ConfirmTemplateContent\r\n                           ministryArray={props.ministryArray}\r\n                           backGroundCheckArray={props.backGroundCheckArray}\r\n                           />\r\n                       </div>\r\n                   </Modal.Description>                    \r\n                   <Modal.Description>\r\n                       <div style={{display:\"flex\", flexDirection:'row'}}>\r\n                           <Button color='black' onClick={props.onFinalize}>Confirm Template Details and Finalize</Button>\r\n                           <Button color='red' onClick={props.onClose}>Cancel Confirmation</Button>\r\n                       </div>\r\n                   </Modal.Description>\r\n                   </div>                   \r\n               </Modal.Content>\r\n        </Modal>\r\n    )\r\n}\r\nexport default TemplateSummaryModalView;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, Form } from 'semantic-ui-react';\r\n\r\nimport { changeNumberOfServices, finalizeScheduleTemplate, changeScheduleTemplateName } from '../../actions/CreateScheduleTemplateActions';\r\n import history from '../../history';\r\nimport CurrentTemplateBuildView from './CurrentTemplateBuildView';\r\nimport TemplateSummaryModalView from './TemplateSummaryModalView';\r\n\r\nclass CreateTemplateView extends React.Component{\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            numberOfServices : this.props.numberOfServices,\r\n            scheduleTemplateName : \"\",\r\n            modalOpen : false\r\n        }\r\n        this.handleNumberOfServicesChange = this.handleNumberOfServicesChange.bind(this);\r\n        this.handleTemplateNameChange = this.handleTemplateNameChange.bind(this);\r\n        this.handleModalOpen = this.handleModalOpen.bind(this);\r\n        this.handleModalClose = this.handleModalClose.bind(this);\r\n    \r\n    }    \r\n\r\n    handleNumberOfServicesChange (event) {\r\n        this.setState( { numberOfServices : event.target.value });\r\n        this.props.onChangeNumberOfServices(event.target.value);\r\n    }\r\n\r\n    handleTemplateNameChange (event) {\r\n        this.setState({ scheduleTemplateName : event.target.value });\r\n        this.props.onChangeTemplateName(event.target.value);\r\n    }\r\n    handleModalOpen () {\r\n        this.setState({  modalOpen : true });\r\n    }\r\n\r\n    handleModalClose () {\r\n        this.setState({ modalOpen : false })\r\n    }\r\n\r\n    buildTemplateObject = () => {\r\n        let newMinistryArray = this.props.ministryArray.map(ministry => {\r\n            return { \r\n                // \"ministryObject\" is an Array of Role Objects.  THis naming would likely be better as 'rolesObjectArray' or something\r\n                \"ministryName\" : ministry.ministryName,    \r\n                \"ministryObject\" : ministry.rolesArray};\r\n        });\r\n\r\n        return {\r\n            \"scheduleTemplateName\" : this.props.scheduleTemplateName,\r\n            \"ministryArray\" : newMinistryArray,\r\n            \"numberOfServices\" : this.props.numberOfServices\r\n        }\r\n    }\r\n\r\n    sendTemplateObject = () => {\r\n        this.handleModalClose();\r\n       this.props.onFinalizeScheduleTemplate(this.buildTemplateObject());\r\n    }\r\n\r\n    //This will be a Modal displaying the Summary of the ScheduleTemplate being created with a Confirm & Cancel/Edit button\r\n    renderTemplateSummaryModal () {\r\n        return (\r\n            <TemplateSummaryModalView  \r\n                ministryArray={this.props.ministryArray}\r\n                backGroundCheckArray={this.props.backGroundCheckArray}\r\n                open={this.state.modalOpen}\r\n                onClose={this.handleModalClose}\r\n                onFinalize={this.sendTemplateObject}\r\n            />\r\n        )\r\n    }\r\n\r\nrender () {\r\n    return (\r\n        <div style={{display:'flex', flexDirection:\"row\", justifyContent:'space-between'}}>\r\n            <div>\r\n                {/*This is a display of the current Schedule Template being built as known in the Schedule Template Store.\r\n                    It's shown on the left hand side of the screen and allows the Admin/User to keep track of the progress of the Schedule Template                */}\r\n                <CurrentTemplateBuildView\r\n                    ministryArray={this.props.ministryArray}\r\n                    numberOfServices={this.props.numberOfServices}\r\n                    scheduleTemplateName={this.props.scheduleTemplateName}\r\n                />\r\n            </div>\r\n            <div style={{flexDirection:\"vertical\" }}>\r\n                <Form>\r\n                    <Form.Input\r\n                        required={true}\r\n                        min=\"1\"\r\n                        max=\"7\"\r\n                        label=\"Enter the Number of Services for this Schedule Template\"\r\n                        type=\"number\"   \r\n                        value={this.props.numberOfServices}//{this.state.numberOfServices}\r\n                        onChange={this.handleNumberOfServicesChange}                         \r\n                        />        \r\n                        {/* <Button  onClick={this.props.onChangeNumberOfServices(this.state.numberOfServices)} >Change Service</Button> */}\r\n                    <Form.Input\r\n                        required={true}\r\n                        type=\"text\"\r\n                        max=\"50\"\r\n                        label=\"Enter the Name of this Schedule Template\"\r\n                        value={this.props.scheduleTemplateName}//{this.state.scheduleTemplateName}\r\n                        onChange={this.handleTemplateNameChange}\r\n                        />                    \r\n                </Form>\r\n                <Button color='green' onClick={() => history.push(\"/settings/createtemplate/addministry\")}>Create a New Ministry</Button>  \r\n                <Button className='ui button primary' onClick={this.handleModalOpen} >Submit Schedule Template</Button>        \r\n                {/*This div is to render a Modal.  This is the Confirmation Modal for the entire Schedule Template */}\r\n                <div>\r\n                    {this.renderTemplateSummaryModal()}\r\n                </div>   \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        ministryArray : state.scheduleTemplate.ministryArray,\r\n        numberOfServices : state.scheduleTemplate.numberOfServices,\r\n        backGroundCheckArray : state.scheduleTemplate.backGroundCheckArray,\r\n        scheduleTemplateName : state.scheduleTemplate.scheduleTemplateName\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFinalizeScheduleTemplate : (templateObject) => dispatch(finalizeScheduleTemplate(templateObject)),\r\n        onChangeNumberOfServices: (numberOfServices) => dispatch(changeNumberOfServices(numberOfServices)),\r\n        onChangeTemplateName: (templateName) => dispatch(changeScheduleTemplateName(templateName))\r\n    }\r\n}\r\nexport default connect (mapStateToProps, mapDispatchToProps)(CreateTemplateView);","import React from 'react';\r\nimport { Item, Button } from 'semantic-ui-react';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nimport { deleteRole } from '../../actions/CreateScheduleTemplateActions';\r\n\r\nclass RoleListView extends React.Component{\r\n    render() {\r\n        return (\r\n            this.props.rolesArray.map((aRole, index) => {\r\n                return (\r\n                    <Item key={index}>\r\n                        <Item.Content>\r\n                            <Item.Description>\r\n                                <div>\r\n                                    <b>\r\n                                        Role Name: {aRole.roleName}\r\n                                    </b>\r\n                                </div>\r\n                                <div>\r\n                                    BackGround Check Required:  {(aRole.backGroundCheckRequired === true ) ? \"Yes\" : \"No\"}\r\n                                </div>                            \r\n                            </Item.Description>\r\n                            <Button size='mini' color='red' onClick={this.props.onRoleDelete.bind(null, aRole.roleName)}>Delete</Button>\r\n                        </Item.Content>                        \r\n                    </Item>\r\n                 )\r\n            })\r\n        );\r\n    }   \r\n}\r\n    \r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onRoleDelete: (roleName) => dispatch(deleteRole(roleName))\r\n    }\r\n}\r\nexport default connect (null, mapDispatchToProps)(RoleListView);","import React from 'react';\r\nimport { Modal, Header, Button } from 'semantic-ui-react';\r\nimport RoleListView from './RoleListView';\r\n\r\nconst ConfirmMinistryModal = (props) => {\r\n    return (\r\n        <Modal trigger={/*<Button onClick={props.onConfirmMinistry}\r\n                                disabled={props.ministryTitle === \"\" || props.rolesArray === []}\r\n        color=\"blue\">\r\n    Submit Schedule Template</Button>}*/props.triggerButton}>\r\n        <Modal.Header>New Ministry Summary:  Please Check Minstry Details for Accuracy and Confirm</Modal.Header>\r\n           <Modal.Content image scrolling>\r\n               <div>\r\n               <RoleListView \r\n                    rolesArray={props.rolesArray}/>\r\n               </div>\r\n           </Modal.Content>\r\n           <Button color='black' onClick={props.submitConfirmMinistryButton}>Confirm Ministry</Button>\r\n           <Button color='red'>Cancel</Button>\r\n    </Modal>\r\n    )\r\n\r\n}\r\n\r\nexport default ConfirmMinistryModal;","import React from 'react';\r\nimport {Form, Radio, Button, Message,  Item } from 'semantic-ui-react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport RoleListView from './RoleListView';\r\nimport ConfirmMinistryModal from './ConfirmMinistryModal';\r\nimport history from \"../../history\";\r\n\r\nimport {addRole, deleteRole, addMinistry, changeCreateMinistryTitle, clearRolesArray} from '../../actions/CreateScheduleTemplateActions';\r\n\r\nclass AddMinistryView extends React.Component{\r\n    constructor () {\r\n        super();\r\n        this.state= {\r\n            ministryTitle : \"\",\r\n            roleName : \"\",\r\n            backGroundRadioValue: null,\r\n            formError : false,   \r\n        }\r\n        this.ministryTitleOnChange=this.ministryTitleOnChange.bind(this);\r\n        this.roleNameOnChange=this.roleNameOnChange.bind(this);\r\n        this.backGroundRadioOnChange=this.backGroundRadioOnChange.bind(this);\r\n        this.submitConfirmMinistryButton = this.submitConfirmMinistryButton.bind(this);\r\n        this.onCancelMinistry = this.onCancelMinistry.bind(this);\r\n    }\r\n    ministryTitleOnChange (event) {\r\n        this.setState ({ ministryTitle: event.target.value})\r\n    }\r\n\r\n    roleNameOnChange (event) {\r\n        this.setState({ roleName : event.target.value})\r\n    }\r\n\r\n    onSubmitAddRole = (event) => {\r\n        //This function determines if the Role Name is empty or if roleName already exists, it will submit if it has a valid name\r\n        let alreadyExists = this.props.rolesArray.some(role => role.roleName === this.state.roleName);\r\n\r\n        if((!(this.state.roleName === \"\")) && (!alreadyExists)) {\r\n            this.setState({formError : false});\r\n            let radioValue = (this.state.backGroundRadioValue === \"true\") ? true : false;\r\n            \r\n            this.props.onAddRole({ roleName: this.state.roleName, backGroundCheckRequired : radioValue })\r\n            this.setState({ roleName : \"\", backGroundRadioValue: null});  //Clears the Input field upon submission\r\n        } else if(alreadyExists){\r\n            this.setState({formError : true});\r\n        }\r\n        event.preventDefault(); //prevents the 'please fill out this field popup'\r\n    }\r\n\r\n    backGroundRadioOnChange = (event, {value}) => {\r\n        this.setState({ backGroundRadioValue : value });\r\n    }\r\n\r\n    submitConfirmMinistryButton () {        \r\n         this.props.onConfirmMinistry({ministryName : this.props.creatingMinistryTitle, rolesArray : this.props.rolesArray});\r\n         history.push(\"/settings/createtemplate\");\r\n    }\r\n\r\n    onCancelMinistry () {\r\n        history.push(\"/settings/createtemplate\");\r\n        this.props.onCancelMinistry();\r\n\r\n    }\r\n\r\n    render () {\r\n        return (\r\n            <div style={{display:'flex', flexDirection:'row', justifyContent:\"space-around\"}}>\r\n                <div>\r\n                    AddMinistryView\r\n                </div>\r\n                <div>\r\n                    <Form /*{...this.state.formError === false ? \"\" : `error`}*/>\r\n                        <Form.Input required\r\n                            label=\"Enter the Name of the Ministry\"\r\n                            placeholder=\"Ministry Name\"\r\n                            value={this.state.ministryTitle}\r\n                            onChange={this.ministryTitleOnChange}\r\n                        />\r\n                        <Form.Input required\r\n                            label=\"Enter the Role Name\"\r\n                            placeholder=\"Role Name\"\r\n                            value={this.state.roleName}\r\n                            onChange={this.roleNameOnChange}\r\n                        />\r\n                        <Message error \r\n                            visible={this.state.formError}                                \r\n                            header=\"Duplicate Role Name. All Role Names in a Ministry must be Unique.\"\r\n                            content=\"Good Example: Parking1  Parking2   Bad Example: Parking Parking\"\r\n                        />\r\n                        <h5>Does this Role require a background check?</h5>\r\n                        <div style={{display:'flex', flexDirection:\"row\", justifyContent:\"space-around\"}}>\r\n                            <Form.Field>\r\n                                <Radio //This Radio is 'true'  \r\n                                    label=\"Yes\"\r\n                                    value=\"true\"\r\n                                    checked={this.state.backGroundRadioValue === \"true\"}\r\n                                    onChange={this.backGroundRadioOnChange}\r\n                                />\r\n                            </Form.Field>\r\n                            <Form.Field>\r\n                                <Radio ///THis radio is 'false'\r\n                                    label=\"No\"\r\n                                    value=\"false\"\r\n                                    checked={this.state.backGroundRadioValue === \"false\"}\r\n                                    onChange={this.backGroundRadioOnChange}\r\n                                />\r\n                            </Form.Field>\r\n                        </div>\r\n                        <Form.Button onClick={this.onSubmitAddRole} color=\"blue\" disabled={this.state.roleName === \"\" || this.state.backGroundRadioValue === null}>Add Role</Form.Button>\r\n                        <Item.Group divided>\r\n                            <RoleListView rolesArray={this.props.rolesArray} onRoleDelete={() => this.props.onRoleDelete()}/>\r\n                        </Item.Group>\r\n                        \r\n\r\n                        <ConfirmMinistryModal\r\n                            submitConfirmMinistryButton={this.submitConfirmMinistryButton}\r\n                            rolesArray={this.props.rolesArray}\r\n                            ministryTitle={this.state.ministryTitle}\r\n                            triggerButton={<Button onClick={this.props.onChangeMinistryName.bind(this, this.state.ministryTitle)} disabled={this.state.ministryTitle === \"\" || this.props.rolesArray.length < 1}\r\n                         color=\"blue\">Add Minstry to Template</Button>}     />                    \r\n                         \r\n                        <Form.Button color='red' onClick={this.onCancelMinistry}>Cancel Ministry Creation</Form.Button>                         \r\n                   </Form>                \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onRoleDelete: (roleName) => dispatch(deleteRole(roleName)),\r\n        onAddRole: (role) => dispatch(addRole(role)),\r\n        onConfirmMinistry: (ministry) => dispatch(addMinistry(ministry)),\r\n        onChangeMinistryName: (ministryName,event) => dispatch(changeCreateMinistryTitle(event,ministryName)),\r\n        onCancelMinistry: () => dispatch(clearRolesArray()),\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        rolesArray : state.scheduleTemplate.rolesArray,\r\n        creatingMinistryTitle : state.scheduleTemplate.creatingMinistryTitle\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMinistryView);","import React from 'react';\r\nimport { Button } from 'semantic-ui-react';\r\nimport history from '../../history';\r\n\r\nclass SettingsMainView extends React.Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                SettingsMainView.js\r\n                <Button color=\"blue\" onClick={() => history.push(\"/settings/createtemplate\")}>Create Schedule Template</Button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SettingsMainView;","import React from 'react';\r\n//import { connect } from 'react-redux';\r\nimport { Button } from 'semantic-ui-react';\r\nimport history from '../../history';\r\n\r\nclass SchedulesMainView extends React.Component {\r\n\r\n    \r\n    render () {\r\n        return (\r\n            <div>\r\n                <div display='flex' justifycontent=\"center\">\r\n                    <Button color='blue' onClick={() => history.push(\"/schedules/createnewschedule\")}>Initialize New Schedule</Button>       \r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default SchedulesMainView;","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL : \"http://localhost:5000/api/managescheduletemplates\"\r\n});","import React from 'react';\r\nimport { Dropdown } from 'semantic-ui-react';\r\n\r\nconst ScheduleTemplateDropdown = (props) => (\r\n    console.log(\"props: \" + JSON.stringify(props.scheduleTemplatesArray)),\r\n    <Dropdown\r\n        placeholder=\"Select Template for New Schedule\"\r\n        // fluid\r\n        // selection\r\n        options={props.scheduleTemplatesArray}\r\n    />\r\n)\r\nexport default ScheduleTemplateDropdown;","import React from 'react';\r\n\r\nimport {  getAllScheduleTemplates } from '../../actions/ManageScheduleTemplatesActions';\r\nimport { connect } from 'react-redux';\r\nimport ScheduleTemplateDropdown from '../scheduleTemplates/ScheduleTemplateDropdown';\r\n\r\nclass CreateNewSchedule extends React.Component{\r\n\r\n    componentDidMount() {\r\n      this.props.getAllScheduleTemplates();\r\n    }\r\n\r\n    buildDropdownArray = () => {\r\n        return (\r\n            this.props.allScheduleTemplates.map(template =>{\r\n                return {\r\n                     key : template._id,\r\n                     text : template.ScheduleTemplateName,\r\n                     value : template.ScheduleTemplateName\r\n                }\r\n            })\r\n        )\r\n    }\r\n    \r\n    // displayScheduleTemplates() {\r\n    //     return (\r\n            \r\n    //     )\r\n    // }\r\n\r\n    render () {\r\n        return (\r\n            <div style={{display:'flex', flexDirection:\"row\", justifyContent:\"space-between\"}}>\r\n                <div>CreateNewScheduleView</div>\r\n                <div>\r\n                    <ScheduleTemplateDropdown\r\n                        scheduleTemplatesArray={this.buildDropdownArray()}\r\n                    />\r\n                </div>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        allScheduleTemplates : state.manageScheduleTemplates.allScheduleTemplates\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { getAllScheduleTemplates })(CreateNewSchedule);","import { \r\n    GET_ALL_SCHEDULETEMPLATES, ERROR_GENERATED\r\n}from './types';\r\n\r\nimport manageScheduleTemplatesAPI from '../apis/manageScheduleTemplates_API';\r\n\r\nexport function getAllScheduleTemplates () {\r\n    return async dispatch => {\r\n        function onSuccess (success) {\r\n            console.log(\"success.data: \" + JSON.stringify(success.data));\r\n            dispatch({ type : GET_ALL_SCHEDULETEMPLATES, payload : success.data });\r\n        }\r\n        function onError(error){\r\n            dispatch({ type : ERROR_GENERATED, error });\r\n        }\r\n        try{\r\n            const success = await manageScheduleTemplatesAPI.get(\"/\");\r\n            return onSuccess(success);\r\n        } catch (error) {\r\n            return onError(error);\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport { Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport history from '../history';\r\n//import { ministry_Test } from '../../../models/test models/ministry_Test';\r\n//import {ministry_Test} from '../models/test models/ministry_Test';\r\n//import {Button} from 'semantic-ui-react';\r\n// import { test_Link_Component } from '../models/test models/test_Link_Component';\r\n// import  main  from './schedules/main';\r\n// import two from './schedules/two';\r\n// import three from './schedules/three';\r\n// import ministry_Tabs_Bar from './schedules/ministry_Tabs_Bar';\r\n\r\n//Components\r\nimport MainVolunteersView from './volunteers/Main_Volunteers_View';\r\nimport CreateVolunteerView from './volunteers/CreateVolunteerView';\r\nimport UpdateVolunteerView from './volunteers/UpdateVolunteerView';\r\nimport DeleteVolunteerView from './volunteers/DeleteVolunteerView';\r\nimport CreateTemplateView from './scheduleTemplates/CreateTemplateView';\r\nimport AddMinistryView from './scheduleTemplates/AddMinistryView';\r\nimport SettingsMainView from './settings/SettingsMainView';\r\nimport SchedulesMainView from './schedules/SchedulesMainView';\r\nimport CreateNewScheduleView from './schedules/CreateNewScheduleView';\r\n\r\n//const RouteArray = [{\"key\":\"1\", \"path\" : \"/\",\"component\":main}, {\"key\":\"2\", \"path\":\"/two\",\"component\":two}, {\"key\":\"3\", \"path\":\"/three\", \"component\":three}];\r\n\r\n/*console.log(RouteArray);\r\nconsole.log(\"roleTest: \" + ministry_Test.context);\r\n*/\r\n\r\n\r\n// const ministryMap = ministry_Test.rolesArray.map((route) => <Route key={route.roleName} path={`/${route.roleName}`} exact component={ministry_Tabs_Bar}/>);\r\n\r\n\r\n// ministry_Test.rolesArray.forEach(element => {\r\n//     console.log(element.roleName + \"    \" + element.backgroundCheckRequired);    \r\n//});\r\n\r\n\r\n//const routeMap = RouteArray.map((route) => <Route key={route.key} path={route.path} exact component={route.component}/>  ); \r\n//const listButtons = arrayOfButtons.map((name) => <Button>{name.name}</Button>)\r\n//<Route path='/' exact component={main} />                                        \r\n//console.log(\"routeMap: \" + routeMap);\r\nconst App = () => {\r\n    return (\r\n        <div className='ui container'>\r\n            <Router history={history}>                    \r\n                <Switch>\r\n                \r\n                    <Route path=\"/volunteers\" exact component={() => <MainVolunteersView/>}/>\r\n                    <Route path=\"/volunteers/create\" exact component={props => <CreateVolunteerView {...props}/>} />\r\n                    <Route path=\"/volunteers/update\" exact component={props => <UpdateVolunteerView {...props}/>} />\r\n                    <Route path=\"/volunteers/delete\" exact component={props => <DeleteVolunteerView  {...props} />}/>\r\n                    <Route path=\"/settings/createtemplate\" exact component={() =>  <CreateTemplateView  /> }/>\r\n                    <Route path=\"/settings/createtemplate/addministry\" exact component={() => <AddMinistryView /> }/>\r\n                    <Route path=\"/settings\" exact component={() => <SettingsMainView/>}/>\r\n                    <Route path=\"/schedules\" exact component={() => <SchedulesMainView/>}/>\r\n                    <Route path=\"/schedules/createnewschedule\" exact component={() => <CreateNewScheduleView/>} />\r\n                    \r\n                </Switch>\r\n            </Router>            \r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;","import _ from 'lodash';\r\n\r\nimport {\r\n    CREATE_VOLUNTEER,\r\n    DELETE_VOLUNTEER, \r\n    UPDATE_VOLUNTEER, \r\n    GET_ALL_VOLUNTEERS, \r\n    GET_ONE_VOLUNTEER,\r\n    VOLUNTEER_SELECTED\r\n} from '../actions/types';\r\n\r\nconst INITIAL_STATE = {    \r\n                    volunteers : [],\r\n                    searchVolunteers : [],\r\n                    volunteerSelected : null\r\n                }\r\n\r\nexport default ( state =  INITIAL_STATE , action ) => {\r\n    switch(action.type) {\r\n        case CREATE_VOLUNTEER:{\r\n            //console.log(action.payload)\r\n            return { ...state, [action.payload] : action.payload};\r\n        }\r\n        case DELETE_VOLUNTEER:\r\n            return _.omit(state, action.payload);\r\n        case UPDATE_VOLUNTEER:\r\n            return {...state, [action.payload.id] : action.payload };\r\n        case GET_ALL_VOLUNTEERS:{            \r\n            return {\r\n                ...state,\r\n                // ..._.mapKeys(action.payload, '_id')};\r\n                //volunteers : [...state.volunteers, action.payload]\r\n                volunteers : action.payload\r\n            }\r\n        }\r\n        case GET_ONE_VOLUNTEER:{\r\n          //  console.log('payload: ' + JSON.stringify(action.payload));\r\n            //console.log('searchVOls: ' + JSON.stringify(state.searchVolunteers))\r\n            //console.log(\"reducer State: \" + JSON.stringify(action.payload));\r\n            return {...state, \r\n                searchVolunteers : action.payload\r\n            }//..._.mapKeys(action.payload, '_id')}; \r\n        }\r\n        case VOLUNTEER_SELECTED : {\r\n            //console.log(\"reducer payload: \" + JSON.stringify(action.payload));\r\n            return {...state, \r\n                volunteerSelected : action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import _ from 'lodash';\r\n\r\nimport {\r\n    CREATE_SCHEDULE,\r\n    DELETE_SCHEDULE,\r\n    GET_ALL_SCHEDULES,\r\n    GET_ONE_SCHEDULE,\r\n    SCHEDULE_SELECTED,\r\n    UPDATE_SCHEDULE\r\n    } from '../actions/types';\r\n\r\nconst INITIAL_STATE = {\r\n    scheduleSelected : null,\r\n    allSchedulesArray : []\r\n}\r\n\r\nexport default ( state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case CREATE_SCHEDULE: {\r\n            return {...state};\r\n        }\r\n        case DELETE_SCHEDULE: {\r\n            return {...state};\r\n        }\r\n        case GET_ALL_SCHEDULES: {\r\n            return {...state};\r\n        }\r\n        case GET_ONE_SCHEDULE: {\r\n            return {...state};\r\n        }\r\n        case SCHEDULE_SELECTED: {\r\n            return {...state};\r\n        }\r\n        case UPDATE_SCHEDULE: {\r\n            return {...state};\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}","// import _ from 'lodash';\r\n// import * as util from 'util';\r\n// import { inspect } from 'util';\r\n \r\nimport {\r\n    ADD_MINISTRY,\r\n    ADD_ROLE,\r\n    CHANGE_NUMBEROFSERVICES,\r\n    ADD_BACKGROUNDCHECK,\r\n    DELETE_ROLE,\r\n    CHANGE_CREATEMINISTRYTITLE,\r\n    CLEAR_ROLESARRAY,\r\n    FINALIZE_SCHEDULE_TEMPLATE,\r\n    CLEAR_CREATEMINISTRYTITLE,\r\n    CHANGE_SCHEDULETEMPLATENAME\r\n} from '../actions/types';\r\n\r\nlet INITIAL_STATE = {\r\n    ministryArray : [],\r\n    backGroundCheckArray : [], \r\n    rolesArray : [],\r\n    numberOfServices : 0,\r\n    creatingMinistryTitle : \"\",\r\n    scheduleTemplateName: \"\",\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action ) => {\r\n    switch(action.type) {\r\n        /**\r\n         * This payload from this field is in components/scheduleTemples/CreateTemplateView\r\n         * This recieves an array of Ministry Names, and it returns a new set of Objects with the Ministry Name.\r\n         * This does not update the existing array or add to it, it replaces it\r\n         *  */\r\n        case ADD_MINISTRY: {\r\n            return {\r\n                ...state,\r\n                ministryArray : [...state.ministryArray, action.payload]\r\n            }\r\n        }   \r\n\r\n        case ADD_ROLE : {\r\n            return { ...state,\r\n                    rolesArray: [...state.rolesArray, action.payload]\r\n            }\r\n        }\r\n        \r\n        case DELETE_ROLE : {\r\n            return { ...state, rolesArray : state.rolesArray.filter(role => role.roleName !== action.payload)}\r\n        }\r\n\r\n        case CLEAR_ROLESARRAY: {\r\n            return { ...state, rolesArray : [] }\r\n        }\r\n        case ADD_BACKGROUNDCHECK : {\r\n            if (!state.backGroundCheckArray.some(roleObject => (roleObject.roleName === action.payload.roleName && roleObject.parentMinistry === action.payload.parentMinistry ) )){//(state.backGroundCheckArray.length === 0){\r\n                return {\r\n                    ...state,\r\n                    backGroundCheckArray: \r\n                    [...state.backGroundCheckArray, action.payload]\r\n                }                \r\n            }\r\n            else {\r\n                return {\r\n                    ...state,\r\n                    backGroundCheckArray: state.backGroundCheckArray.map((roleObject, index) =>                     \r\n                        (roleObject.roleName === action.payload.roleName && roleObject.parentMinistry === action.payload.parentMinistry) ?\r\n                            {...roleObject, isRequired : action.payload.isRequired} : roleObject   \r\n                    )\r\n                }\r\n            }\r\n        }        \r\n        case CHANGE_NUMBEROFSERVICES : {\r\n            return {...state, numberOfServices : action.payload };\r\n        }\r\n\r\n        case CHANGE_CREATEMINISTRYTITLE:{\r\n            return {...state, creatingMinistryTitle : action.payload };\r\n        }\r\n        case CLEAR_CREATEMINISTRYTITLE : {\r\n            return {...state, creatingMinistryTitle : \"\" };\r\n        }\r\n        case CHANGE_SCHEDULETEMPLATENAME: {\r\n            return { ...state, scheduleTemplateName : action.payload }\r\n        }\r\n        case FINALIZE_SCHEDULE_TEMPLATE : {\r\n            return  INITIAL_STATE;\r\n        }\r\n        default : {\r\n            return state;\r\n        }\r\n\r\n    }\r\n}","import {\r\n    GET_ALL_SCHEDULETEMPLATES\r\n} from '../actions/types';\r\n\r\nlet INITIAL_STATE = {\r\n    allScheduleTemplates : []\r\n}\r\n\r\nexport default ( state = INITIAL_STATE, action) => {\r\n    switch(action.type) {\r\n        case GET_ALL_SCHEDULETEMPLATES: {\r\n            console.log('get All reducer: ' + JSON.stringify(action.payload));\r\n            return {\r\n                 ...state, allScheduleTemplates : action.payload \r\n            }\r\n        }\r\n        default : {\r\n            return state;\r\n        }\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n//import authReducer from './authReducer';\r\nimport volunteersReducer from './volunteersReducer';\r\nimport SchedulesReducer from './SchedulesReducer';\r\nimport SchedulesTemplateReducer from './CreateSchedulesTemplateReducer';\r\nimport ManageScheduleTemplatesReducer from './ManageScheduleTemplatesReducer';\r\n\r\nexport default combineReducers({\r\n    volunteers : volunteersReducer,\r\n    form: formReducer,\r\n    schedules : SchedulesReducer,\r\n    scheduleTemplate : SchedulesTemplateReducer,\r\n    manageScheduleTemplates : ManageScheduleTemplatesReducer\r\n});","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App/>\r\n    </Provider>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}